{
  "slug": "Mes compétences transverses",
  "title": "Compétences transverses",
  "content": {
    "articles": [
      {
        "title": "Prise d'initiative",
        "customCss": {},
        "direction": "row",
        "banner": {
          "headline": "Prise d'iniative",
          "image": {
            "src": "/img/initiative.jpg",
            "alt": ""
          }
        },
        "elements": [
          {
            "type": "text",
            "content": "<p>Par nature j'ai toujours été à la recherche de moyens d’optimiser ce que je fais de sorte à le simplifier, que ce soit pour gagner du temps ou rendre plus agréable mon travail. Dans le cadre de mon activité professionnelle cela s’applique tout naturellement.</br>C'est dans cet esprit d'initiative que j'ai décidé de faire un brainstorming d’idées et processus DevOps que nous pourrions mettre en place au sein de mon entreprise.</p><p></br>Je n'ai pas peur de remettre en question les pratiques existantes et de proposer des solutions nouvelles. A cette occasion j’ai donc invité le directeur technique et le directeur des systèmes d’informations à échanger sur mes idées  ayant pour objectif d’améliorer et de standardiser nos plateformes kubernetes, de voir ce qui peut être applicable, ou même éveiller de nouvelles propositions.</p><p></br>Une des initiatives qui ont été acceptée a permis à l’entreprise de lister toutes les données qui doivent être sauvegarder ainsi que certaines informations complémentaires tel que leur forme (fichier ou base de données), leur cycle de vie mais aussi le poids attendu (puisque cela a un coût financier non négligeable).</br>Cette initiative a eu un impact positif immédiat sur l’entreprise puisque désormais sont identifiés par tout le monde ce qui est déjà sauvegardé.</br>Cela permet donc d’éviter les oublis de backup, et bien que ces sauvegardes soient automatiques cela permet aussi de ne pas oublier celles qui ont pu rencontrer un problème technique.</p><p></br>En outre, c’est ce genre d’initiative ayant pour but de cadrer des processus et donc d’être plus professionnel, qui contribue à améliorer notre collaboration.</br>De plus le fait d’être validé par mes pairs m’a conforté dans l’idée que j’ai une réelle compétence pour faire preuve d’initiative.</p>",
            "customCss": {
            }
          }
        ]
      },
      {
        "title": "Capacité à résoudre des problèmes",
        "customCss": {},
        "direction": "row",
        "banner": {
          "headline": "Capacité à résoudre des problèmes",
          "image": {
            "src": "/img/article-thinking.webp",
            "alt": ""
          }
        },
        "elements": [
          {
            "type": "text",
            "content": "<p>En tant qu'ingénieur DevOps, ma capacité à résoudre des problèmes complexes et à optimiser les environnements de production est essentielle pour garantir des systèmes fiables et performants.</br>Je vais illustrer cette compétence en décrivant comment j'ai résolu un problème de gestion de la rétention des données dans une base TimescaleDB utilisée par le context broker <b>Stellio</b>, déployé sur Kubernetes.<h2>Contexte du problème</h2>Stellio est un context broker qui stocke des attributs et des événements temporels dans une base de données TimescaleDB.</br>L'objectif est de conserver les données pertinentes tout en supprimant automatiquement les données obsolètes pour optimiser l'utilisation de l'espace de stockage.</br>Cependant, nous avons rencontré un problème où le mécanisme de rétention des données ne fonctionnait pas comme prévu. Les données anciennes restaient dans la base, ce qui augmentait le volume des données et impactait la performance.<h2>Problème Identifié</h2>Après une analyse approfondie, nous avons découvert que le problème résidait dans la gestion des <b>chunks</b> de TimescaleDB.</br>Les chunks, qui sont des partitions internes de TimescaleDB, n'étaient pas configurés correctement pour permettre une rétention efficace.</br>Voici les points clés du problème :<li><b>Mauvaise Utilisation des Chunks</b> : Les chunks contenaient des données sur des périodes trop larges, ce qui empêchait la suppression des données anciennes sans affecter les données récentes.</li><li><b>Politique de Rétention Inopérante</b> : La politique de rétention ne pouvait pas supprimer les chunks car ils contenaient à la fois des données récentes et anciennes.</li><li><b>Configurations par Défaut</b> : Les configurations par défaut de TimescaleDB ne correspondaient pas aux besoins spécifiques de notre application.</li><h2> Résultats et conclusion </h2>Après avoir mis en œuvre ces modifications, nous avons observé une réduction significative du volume de données stockées dans la base TimescaleDB.</br>Les chunks étaient désormais correctement segmentés et les politiques de rétention fonctionnaient comme prévu, permettant de supprimer automatiquement les données obsolètes.</br>De plus, la performance globale du système s'est améliorée, avec des temps de requête plus rapides et une gestion de l'espace de stockage optimisée.</p><p>Cette expérience démontre ma capacité à identifier et résoudre des problèmes complexes dans des environnements de production.</br>En comprenant les spécificités de TimescaleDB et en appliquant des solutions adaptées, j'ai pu améliorer l'efficacité et la performance de notre système.</br>En tant qu'ingénieur DevOps, je suis prêt à relever des défis similaires et à garantir des environnements de production robustes et performants.</p>",
            "customCss": {
            }
          }
        ]
      }, 
      {
        "title": "Communication en anglais",
        "customCss": {},
        "direction": "row",
        "banner": {
          "headline": "Communication en anglais",
          "image": {
            "src": "/img/speaker.png",
            "alt": ""
          }
        },
        "elements": [
          {
            "type": "text",
            "content": "<p>Je suis amené à travailler au quotidien avec des équipes françaises, mais je peux être amené à communiquer avec  des clients étrangers et surtout utiliser des outils dans la documentation est en anglais.</br>La maîtrise de l'anglais est donc devenue une compétence essentielle pour moi, et ce à plusieurs niveaux.</br>Tout d'abord, l'anglais me permet de communiquer efficacement avec les clients.</br>Cela est crucial pour comprendre et être compris lors d’un échange, que ce soit pour partager des informations, de résoudre des problèmes et de prendre des décisions ensemble.</br>L'anglais est la langue commune qui nous permet de nous comprendre et de collaborer de manière productive.</br>De plus, l'anglais me donne accès à une vaste quantité d'informations et de ressources qui ne seraient pas disponibles en français.</br>Par exemple je peux trouver des ressources à propos de Kubernetes incluant la documentation technique, les tutoriels, les forums en ligne et les communautés d'utilisateurs.</br>En étant capable de lire et de comprendre l'anglais, je peux rester à jour sur les technologies employées et apprendre de mes pairs du monde entier.</br>Enfin, la plupart des outils et des plateformes DevOps sont conçus en anglais.</br>Cela signifie qu'il est essentiel de pouvoir comprendre la documentation, les interfaces utilisateur et les messages d'erreur pour les utiliser efficacement.</br>L'anglais me permet également de participer à des forums de discussion tel que StackOverflow pour obtenir de l'aide et partager mes connaissances avec d'autres utilisateurs.</br>En bref, la maîtrise de l'anglais est une compétence transverse indispensable dans le domaine informatique.</br>Parler une seconde langue c’est augmenter ses chances d’obtenir les informations que l’on recherche et donc d’être plus efficace dans son travail.</p>",
            "customCss": {
            }
          }
        ]
      }
    ]
  }
}