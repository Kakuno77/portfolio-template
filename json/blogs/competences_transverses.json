{
  "slug": "Mes compétences transverses",
  "title": "Compétences transverses",
  "content": {
    "articles": [
      {
        "title": "Prise d'initiative",
        "customCss": {},
        "direction": "row",
        "banner": {
          "headline": "Prise d'iniative",
          "image": {
            "src": "/img/initiative.jpg",
            "alt": ""
          }
        },
        "elements": [
          {
            "type": "text",
            "content": "<p>Par nature j'ai toujours été à la recherche de moyens d’optimiser ce que je fais de sorte à le simplifier, que ce soit pour gagner du temps ou rendre plus agréable mon travail. Dans le cadre de mon activité professionnelle cela s’applique tout naturellement.</br>C'est dans cet esprit d'initiative que j'ai décidé de faire un brainstorming d’idées et processus DevOps que nous pourrions mettre en place au sein de mon entreprise.</p><p></br>Je n'ai pas peur de remettre en question les pratiques existantes et de proposer des solutions nouvelles. A cette occasion j’ai donc invité le directeur technique et le directeur des systèmes d’informations à échanger sur mes idées  ayant pour objectif d’améliorer et de standardiser nos plateformes kubernetes, de voir ce qui peut être applicable, ou même éveiller de nouvelles propositions.</p><p></br>Une des initiatives qui ont été acceptée a permis à l’entreprise de lister toutes les données qui doivent être sauvegarder ainsi que certaines informations complémentaires tel que leur forme (fichier ou base de données), leur cycle de vie mais aussi le poids attendu (puisque cela a un coût financier non négligeable).</br>Cette initiative a eu un impact positif immédiat sur l’entreprise puisque désormais sont identifiés par tout le monde ce qui est déjà sauvegardé.</br>Cela permet donc d’éviter les oublis de backup, et bien que ces sauvegardes soient automatiques cela permet aussi de ne pas oublier celles qui ont pu rencontrer un problème technique.</p><p></br>En outre, c’est ce genre d’initiative ayant pour but de cadrer des processus et donc d’être plus professionnel, qui contribue à améliorer notre collaboration.</br>De plus le fait d’être validé par mes pairs m’a conforté dans l’idée que j’ai une réelle compétence pour faire preuve d’initiative.</p>",
            "customCss": {
            }
          }
        ]
      },
      {
        "title": "Résoudre des problèmes dans des environnements de production",
        "customCss": {},
        "direction": "row",
        "banner": {
          "headline": "Résoudre des problèmes dans des environnements de production",
          "image": {
            "src": "/img/article-thinking.webp",
            "alt": ""
          }
        },
        "elements": [
          {
            "type": "text",
            "content": "<p>En tant qu'ingénieur DevOps, ma capacité à résoudre des problèmes complexes et à optimiser les environnements de production est essentielle pour garantir des systèmes fiables et performants.</br>Je vais illustrer cette compétence en décrivant comment j'ai résolu un problème de gestion de la rétention des données dans une base TimescaleDB utilisée par le context broker <b>Stellio</b>, déployé sur Kubernetes.<h2>Contexte du problème</h2>Stellio est un context broker qui stocke des attributs et des événements temporels dans une base de données TimescaleDB.</br>L'objectif est de conserver les données pertinentes tout en supprimant automatiquement les données obsolètes pour optimiser l'utilisation de l'espace de stockage.</br>Cependant, nous avons rencontré un problème où le mécanisme de rétention des données ne fonctionnait pas comme prévu. Les données anciennes restaient dans la base, ce qui augmentait le volume des données et impactait la performance.<h2>Problème Identifié</h2>Après une analyse approfondie, nous avons découvert que le problème résidait dans la gestion des <b>chunks</b> de TimescaleDB.</br>Les chunks, qui sont des partitions internes de TimescaleDB, n'étaient pas configurés correctement pour permettre une rétention efficace.</br>Voici les points clés du problème :<li><b>Mauvaise Utilisation des Chunks</b> : Les chunks contenaient des données sur des périodes trop larges, ce qui empêchait la suppression des données anciennes sans affecter les données récentes.</li><li><b>Politique de Rétention Inopérante</b> : La politique de rétention ne pouvait pas supprimer les chunks car ils contenaient à la fois des données récentes et anciennes.</li><li><b>Configurations par Défaut</b> : Les configurations par défaut de TimescaleDB ne correspondaient pas aux besoins spécifiques de notre application.</li><h2> Résultats et conclusion </h2>Après avoir mis en œuvre ces modifications, nous avons observé une réduction significative du volume de données stockées dans la base TimescaleDB de l'ordre de 50%.</br>Les chunks étaient désormais correctement segmentés et les politiques de rétention fonctionnaient comme prévu, permettant de supprimer automatiquement les données obsolètes.</br>De plus, la performance globale du système s'est améliorée, avec des temps de requête plus rapides et une gestion de l'espace de stockage optimisée.</p><p>Cette expérience démontre ma capacité à identifier et résoudre des problèmes complexes dans des environnements de production.</br>En comprenant les spécificités de TimescaleDB et en appliquant des solutions adaptées, j'ai pu améliorer l'efficacité et la performance de notre système.</p>",
            "customCss": {
            }
          }
        ]
      }, 
      {
        "title": "Communication",
        "customCss": {},
        "direction": "row",
        "banner": {
          "headline": "Communication",
          "image": {
            "src": "/img/com.jpg",
            "alt": ""
          }
        },
        "elements": [
          {
            "type": "text",
            "content": "<p> En tant qu'introverti et indépendant, la communication n'a jamais été mon point fort. Mon inclination naturelle est de travailler de manière autonome, souvent en silence. Cette tendance a parfois suscité des interrogations de la part de mes collègues au sein de mon alternance d'ingénieur Devops. Ils se demandaient sur quelles tâches je travaillais et si j'étais capable de les réaliser correctement. </br> <h2>Défis initiaux</h2> Le DevOps invite à la collaboration entre les équipes de développement et d'opérations pour améliorer les processus, réduire les délais de livraison et assurer une meilleure qualité des logiciels. Ainsi, il m'a fallu un travail personnel considérable pour adopter communication constante et efficace. </br> Un incident particulier a mis en lumière l'importance de la communication. Lors d'un redéploiement d'un service (ElasticSearch) pour mettre à jour sa configuration, j'avais prévu une mise à jour progressive des pods, un à un. Cependant, j'avais sous-estimé le nombre de répliques nécessaires, ce qui a conduit à une surcharge des pods encore actifs pendant que les autres redémarraient. Ce manque de communication a été double : d'une part, je n'avais pas clairement expliqué ce que j'allais faire, et d'autre part, je n'ai pas immédiatement communiqué lorsque le service a rencontré des problèmes. <h2>Travail personnel</h2> Cet événement m'a poussé à entreprendre un long travail personnel tout au long de mon alternance pour m'ouvrir davantage et améliorer ma communication. J'ai appris à partager mes interrogations, à demander de l'aide lorsque j'avais des difficultés à réaliser une tâche, et à informer mes collègues lorsque j'étais disponible pour prendre en charge d'autres tâches. </br> <h2>Bénéfices</h2> Ce travail sur moi-même m'a permis de progresser significativement. J'ai découvert que partager mes défis et mes réussites contribuait à un meilleur esprit d'équipe et permettait d'avancer plus vite dans les projets. La communication ouverte et honnête a non seulement amélioré ma propre efficacité, mais a également renforcé la confiance et la collaboration au sein de l'équipe. En fin de compte, cette compétence transversale s'est révélée être un atout essentiel pour réussir dans le monde professionnel. </p>",
            "customCss": {
            }
          }
        ]
      }
    ]
  }
}