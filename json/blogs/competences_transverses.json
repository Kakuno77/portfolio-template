{
  "slug": "Mes competences transverses",
  "title": "Compétences transverses",
  "content": {
    "articles": [
      {
        "title": "L'adaptabilité",
        "customCss": {},
        "direction": "row",
        "banner": {
          "headline": "L'adaptabilité",
          "image": {
            "src": "/img/article-adaptabilite.jpg",
            "alt": ""
          }
        },
        "elements": [
          {
            "type": "text",
            "content": "<p>Au commencement de mon stage chez Xo7, j'ai rapidement constaté que la compétence transversale cruciale de l'adaptabilité était un pilier essentiel au sein de l'entreprise. Même si j'avais mis de côté le langage PHP pendant trois ans, je n'ai pas éprouvé de difficultés majeures à me réacclimater à ses subtilités techniques. L'atmosphère dynamique de Xo7, combinée à une équipe collaborative et à des ressources de formation approfondies, a grandement facilité ma transition. Cette expérience a renforcé ma conviction quant à l'importance de l'adaptabilité dans le contexte professionnel, soulignant la nécessité de rester ouvert aux changements et de s'ajuster rapidement aux évolutions technologiques. Ces premiers jours chez Xo7 ont ainsi été une démonstration concrète de la pertinence de cette compétence transversale, confirmant qu'elle constitue un atout indispensable pour se démarquer des nombreux autres développeurs qui existent sur le marché du travail.</p><p>De surcroît, la facilité avec laquelle je me suis adapté aux technologies chez Xo7 découle également de ma démarche de ne jamais me spécialiser exclusivement dans quelques technologies spécifiques. Mon approche a toujours consisté à utiliser les langages de programmation de manière stratégique pour acquérir des notions, des concepts et des paradigmes de programmation plutôt que de m'en tenir uniquement à l'apprentissage de la syntaxe.</p><p>Avant de commencer mon stage à Xo7, j'ai postulé pour une centaine de postes. Dans chacun de ces postes, bien que je faisais attention aux technologies citées, je ne me posais pas de limite. Par exemple, moi qui n'a jamais fait de C#, je n'ai pas hésité à postuler pour des offres de stage proposant un poste de développeur C#. Je savais qu'il n'était pas nécessaire pour moi de me mettre des limites, bien au contraire, j'étais prêt à apprendre n'importe quoi, même si je n'avais pas côtoyé les technologies demandées. J'ai accepté l'offre de stage Xo7 alors que cette dernière annonçait clairement que j'allais manipuler avec le langage PHP, langage que je n'avais pas utilisé pendant 3 ans. De plus, j'ai confiance en mes capacités et je sais que peu importe la technologie qu'on m'impose, je saurais très rapidement m'y habituer.</p><p>Cette polyvalence que j'ai développée lors de mon apprentissage en autodidacte, m'a offert une capacité à comprendre très rapidement des notions techniques, et me permet aujourd'hui d'aborder de nouveaux défis avec confiance et certitude. L'aptitude à comprendre les principes fondamentaux au-delà des langages individuels a été un atout majeur dans ma capacité à m'adapter rapidement aux exigences spécifiques du langage PHP chez Xo7, soulignant ainsi la valeur de cette approche dans un monde professionnel en constante mutation.</p>",
            "customCss": {
            }
          }
        ]
      },
      {
        "title": "Capacité à resoudre des problèmes",
        "customCss": {},
        "direction": "row",
        "banner": {
          "headline": "Capacité à resoudre des problèmes",
          "image": {
            "src": "/img/article-thinking.webp",
            "alt": ""
          }
        },
        "elements": [
          {
            "type": "text",
            "content": "<p>Avant d'entamer ma première expérience au sein de l'entreprise Xo7, j'ai consacré un temps considérable à affiner ma capacité à résoudre des problèmes complexes. Mon terrain d'entraînement de prédilection était le site web Codewars, une plateforme offrant une multitude de défis algorithmiques couvrant divers domaines tels que les mathématiques, la cryptographie et les structures de données. Cette préparation intensive a rapidement porté ses fruits lorsque j'ai fait mes premiers pas chez Xo7, où j'ai su m'adapter rapidement au langage PHP ainsi que l'utilisation de Git et de commandes Linux sur des machines virtuelles fonctionnant sous Debian.</p><p>Pour anecdote, j'ai eu un ticket contenant de longues spécifications, à résoudre. Il a fallu que je décompose le problème en sous-problèmes et en résolvant chaque sous-problème pour trouver une solution finale. On appelle également cette méthode \"diviser pour régner\", méthode que j'ai pu expérimenter dans un problème mathématique de calcul de matrices auquel j'ai fait face, sur le site Codewars. Pour résoudre ce problème, j'ai implémenté un algorithme en suivant cette méthode. Souvent, les développeurs ne se rendent pas compte qu'ils utilisent cette méthode au quotidien lorsqu'ils sont confrontés à des problèmes complexes ou longs à resoudre.</p><p>En informatique, \"diviser pour régner\" est une technique algorithmique consistant à :\n<ol><li>Diviser : découper un problème initial en sous-problèmes</li>\n<li>Régner : résoudre les sous-problèmes (récursivement ou directement s'ils sont assez petits)</li>\n<li>Combiner : calculer une solution au problème initial à partir des solutions des sous-problèmes.</li></ol></p><p>Mon approche originale face à chaque problème a été remarquée, ce qui m'a valu des éloges pour ma perspicacité.</p><p>En conséquence, on m'a rapidement confié la responsabilité de travailler de manière autonome sur deux produits numériques distincts, chacun dédié à un client spécifique. Cette évolution rapide vers des missions plus indépendantes a été une validation tangible de ma capacité à résoudre des problèmes de manière efficace et créative. J'ai très vite compris que cette habitude à confronter le cerveau à des problèmes difficiles entraîne l'esprit à résoudre des défis complexes, chose qui est indispensable pour un developpeur.</p>",
            "customCss": {
            }
          }
        ]
      }, 
      {
        "title": "Communication",
        "customCss": {},
        "direction": "row",
        "banner": {
          "headline": "Communication",
          "image": {
            "src": "/img/communication.png",
            "alt": ""
          }
        },
        "elements": [
          {
            "type": "text",
            "content": "<p>En débutant ma carrière professionnelle chez Xo7, j'ai rapidement constaté le défi supplémentaire que représentait ma nature introvertie, accentuée par une habitude acquise au fil des années d'apprentissage en autodidacte dans le domaine informatique. Les développeurs, en raison de leur propension naturelle à travailler de manière isolée, ont souvent tendance à résoudre les problèmes sans nécessairement communiquer en détail leurs démarches. Mon adaptation au monde professionnel a été marquée par la prise de conscience de cette tendance, et j'ai rapidement compris que pour optimiser ma contribution au sein de l'équipe chez Xo7, il était essentiel de surmonter ma réticence à partager pleinement ma méthodologie.</p><p>Cette habitude d'autonomie, bien que bénéfique dans le contexte de l'auto-apprentissage, pouvait créer des situations où mes collègues se sentaient parfois exclus ou mal informés sur l'avancement de mes tâches. Cela a exigé de moi une évolution vers une communication plus ouverte et détaillée, en reconnaissant l'importance de partager mes réflexions et de collaborer activement avec mes pairs.</p><p>Un jour, on m'a affecté un ticket qui avait une certaine complexité. Excité, je me suis lancé la tête dans l'eau. J'ai effectué le développement, envoyé le code en environnement de pré-production, assigné le ticket au client pour que ce dernier teste et valide le bon fonctionnement. Le client a validé et m'a demandé d'envoyer mon code en production. Cependant, j'ai fais une erreur en ne pas consultant mon tuteur avant de commencer ce ticket. En guise de résultat, une fois le code envoyé en production, mon tuteur a déclaré que le code allait devoir être retiré de la production car il allait poser probleme dans le futur. Il faut savoir que ce n'est pas le code qui posait problème, mais la demande du client qui n'était pas adapté, car elle dépassait une certaine limite technique. De ce fait, mon tuteur m'a bien fait ccomprendre l'importance de communiquer mes actions avant de faire quoi que ce soit.</p><p> Depuis ce jour, j'ai compris que des détails pouvant paraître petits, ne le sont pas forcement, et en communiquant davantage on réduit les risques de goulot d'étranglement dans les projets. Elle souligne ainsi l'importance de trouver un équilibre entre l'approche individuelle nécessaire dans le développement informatique et la communication indispensable pour le succès collectif en entreprise.</p>",
            "customCss": {
            }
          }
        ]
      }
    ]
  }
}