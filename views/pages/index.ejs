<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
  <link rel="stylesheet" href="/style/index.css" />
  <link rel="stylesheet" href="/style/navbar.css" />
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;700&display=swap" rel="stylesheet">
  <link href="https://fonts.cdnfonts.com/css/new-boba" rel="stylesheet">
  <link href="https://fonts.cdnfonts.com/css/sofia-pro" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Montserrat&display=swap" rel="stylesheet">

  <script src="/js/jquery-3.7.1.min.js"></script>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" rel="stylesheet">
</head>

<body>

  <% const {profile_picture, whoami, logo, heading, projects, about, works}=sections %>
    <%- include('../components/navbar', {logo}) %>
      <div class="index">
        <div class="heading-container">
            <%- include('../components/index/heading', {heading}) %>
        </div>
        <div class="content-container">
         <!-- <%- include('../components/index/projects', {projects}) %>
          -->
          <%- include('../components/index/about', {about}) %>
          <%- include('../components/index/where-i-work', {works}) %>

        </div>
        
        <%- include('../components/index/medias-icons') %>
        <%- include('../components/index/contact-side') %>

      </div>
      <script>
        window.onload = function () {
          document.querySelector('.menu-items').style.display = 'flex'
          function checkVisible(elm, evalType) {
            evalType = evalType || "visible";

            var vpH = $(window).height(), // Viewport Height
              st = $(window).scrollTop(), // Scroll Top
              y = elm.offset().top,
              elementHeight = elm.height();

            if (evalType === "visible") return ((y < (vpH + st)) && (y > (st - elementHeight)));
            if (evalType === "above") return ((y < (vpH + st)));
          }
          const scrollHandleParallax = function (parentElement) {

            $(parentElement + ' > div').each((index, element) => {
              //console.log($(document).scrollTop())

              /*const documentScrollTop = $(document).scrollTop()
              const elementScrollTop = (($(element).position().top) - ($(element).innerHeight() * 1.5))
              console.log('document scrolltop: ' + documentScrollTop)
              console.log('element scrolltop: ' + elementScrollTop)
              console.log(window.innerHeight)*/
              if (/*documentScrollTop >= elementScrollTop ||*/ checkVisible($(element)))
                $(element).animate({
                  'right': 0,
                }, 1000)
            });
          }
          $(document).on('scroll', function () {
            scrollHandleParallax('.heading-container')
            scrollHandleParallax('.projects')

          })
          scrollHandleParallax('.heading-container')
          scrollHandleParallax('.projects')
          const updateDom = function() {
            const workDescriptionDiv = document.querySelector('.selected-work')
          console.log(workDescriptionDiv)
          workDescriptionDiv.querySelector('.selected-work .selected-work-bullet-points').innerHTML = ''

          const dataId = workDescriptionDiv.getAttribute('data-id')
          const works = <%- JSON.stringify(works)  %>
          const currentWork = JSON.parse(JSON.stringify(works.jobs[dataId]))

          workDescriptionDiv.querySelector('.selected-work-job .selected-work-job-name').innerHTML = currentWork.job
          workDescriptionDiv.querySelector('.selected-work-job .selected-work-job-place').innerHTML = ' @' + currentWork.place
          workDescriptionDiv.querySelector('.selected-work .selected-work-dates').innerHTML = currentWork.date

          for (const item of currentWork.items) {
            const li = document.createElement('li')
            li.innerText = item
            li.onclick = function(e) {
              console.log('click')
            }
            workDescriptionDiv.querySelector('.selected-work .selected-work-bullet-points').appendChild(li)

          }
          }

          updateDom()
          Array.from(document.querySelectorAll('.work-name')).forEach((a) => {
            a.onclick = function(e) {
              console.log(e.target.getAttribute('data-id'))
              const workDescriptionDiv = document.querySelector('.selected-work')
              workDescriptionDiv.setAttribute('data-id', e.target.getAttribute('data-id'))
              updateDom()
            }
          });

        }

      </script>
</body>

</html>